<!-- modules/notifications/pom.xml -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.dispatchly</groupId>
    <artifactId>parent</artifactId>
    <version>0.0.1</version>
    <relativePath>../../pom.xml</relativePath>
  </parent>
  <artifactId>notifications</artifactId>
  <name>notifications</name>
  <description>
    Manages the canonical record of a notification request, including idempotency and status tracking. It is the source
    of truth for support, audit, and querying timelines.
  </description>
  <packaging>jar</packaging>

  <dependencies>
    <!-- Core Spring context, config, logging -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter</artifactId>
    </dependency>

    <!-- DynamoDB SDK: store notification records, statuses, attempts -->
    <dependency>
      <groupId>software.amazon.awssdk</groupId>
      <artifactId>dynamodb</artifactId>
    </dependency>

    <!-- Kafka client: optional, but useful if this module emits status update events -->
    <dependency>
      <groupId>org.springframework.kafka</groupId>
      <artifactId>spring-kafka</artifactId>
    </dependency>

    <!-- Shared domain objects (NotificationRequest, NotificationStatus, error codes) -->
    <dependency>
      <groupId>com.dispatchly</groupId>
      <artifactId>shared</artifactId>
    </dependency>

    <!-- Testing (JUnit, Mockito, AssertJ, DynamoDB local helpers) -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

</project>
