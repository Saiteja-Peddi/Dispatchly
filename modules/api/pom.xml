<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.dispatchly</groupId>
    <artifactId>parent</artifactId>
    <version>0.0.1</version>
    <relativePath>../../pom.xml</relativePath>
  </parent>

  <artifactId>api</artifactId>
  <name>api</name>
  <description>
    Handles all HTTP requests/responses, validating input and mapping it to business use cases.
    It keeps controllers and DTOs isolated from core business logic.
  </description>
  <packaging>jar</packaging>

  <dependencies>
    <!-- Spring Boot Web starter: provides Spring MVC, REST controllers, validation, and JSON binding -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

    <!-- For request/response validation using annotations like @NotNull, @Email, @Size -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
    </dependency>

    <!-- Internal modules: api delegates to dispatcher for business flow -->
    <dependency>
      <groupId>com.dispatchly</groupId>
      <artifactId>dispatcher</artifactId>
    </dependency>
    <dependency>
      <groupId>com.dispatchly</groupId>
      <artifactId>shared</artifactId>
    </dependency>

    <!-- Tests: Spring Boot starter test (JUnit 5, AssertJ, MockMvc) -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

</project>
